drop database askus;
create database askus;
use askus;

-- BANG VAI TRO
create table VaiTro(
	id bigint primary key auto_increment,
    maVaiTro varchar(50) not null unique,
    tenVaiTro varchar(50) not null unique
);
-- insert
insert into VaiTro(maVaiTro, tenVaiTro) values("ADMIN", "Quản trị viên");
insert into VaiTro(maVaiTro, tenVaiTro) values("USER", "Người dùng");
-- BANG VAI TRO

-- BANG NGUOI DUNG
create table NguoiDung(
	id bigint primary key auto_increment,
    idVaiTro bigint not null,
    hoTen varchar(150),
    taiKhoan varchar(150) not null unique,
    matKhau varchar(150) not null,
    email varchar(50),
    FOREIGN KEY (idVaiTro) REFERENCES VaiTro(id)
);
-- insert
insert into NguoiDung(idVaiTro, hoTen, taiKhoan, matKhau, email) values(1, "Nguyễn Văn A", "admin", "123123", "admin@gmail.com");
insert into NguoiDung(idVaiTro, hoTen, taiKhoan, matKhau, email) values(2, "Nguyễn Văn B", "user", "123123", "user@gmail.com");
insert into NguoiDung(idVaiTro, hoTen, taiKhoan, matKhau, email) values(2, "Nguyễn Văn C", "user1", "123123", "user1@gmail.com");
-- BANG NGUOI DUNG

-- BANG THE LOAI
create table TheLoai(
	id bigint primary key auto_increment,
    maTheLoai varchar(50) not null unique,
    tenTheLoai varchar(50) not null unique
);
-- insert
insert into TheLoai(maTheLoai, tenTheLoai) values("lap-trinh", "Lập trình");
insert into TheLoai(maTheLoai, tenTheLoai) values("tim-viec-lam", "Tiềm việc làm");
-- BANG THE LOAI

-- BANG BAI VIET
create table BaiViet(
	id bigint primary key auto_increment,
	idTheLoai bigint not null,
    idNguoiDung bigint not null,
    tieuDe varchar(255) not null,
    noiDung text,
    hinhANh text,
    FOREIGN KEY (idTheLoai) REFERENCES TheLoai(id),
	FOREIGN KEY (idNguoiDung) REFERENCES NguoiDung(id)
);
-- insert
insert into BaiViet(idTheLoai, idNguoiDung, tieuDe, noiDung) values(1, 2, "Java servlet là gì?", "xin các khoá học");
insert into BaiViet(idTheLoai, idNguoiDung, tieuDe, noiDung) values(2, 2, "Học java thì ra trường làm gì?", "Học java ra trường làm gì vậy?");
-- BANG BAI VIET

-- BANG TRANG THAI BAI VIET
create table TrangThaiBaiViet(
	id bigint primary key auto_increment,
    maTrangThaiBaiViet varchar(150) not null unique,
    tenTrangThaiBaiViet varchar(150) not null unique
);
-- insert
insert into TrangThaiBaiViet(maTrangThaiBaiViet, tenTrangThaiBaiViet) values("DXL", "Đang xử lý");
insert into TrangThaiBaiViet(maTrangThaiBaiViet, tenTrangThaiBaiViet) values("DD", "Đã đăng");
insert into TrangThaiBaiViet(maTrangThaiBaiViet, tenTrangThaiBaiViet) values("DX", "Đã xoá");
-- BANG TRANG THAI BAI VIET

-- BANG THONG TIN TRANG THAI BAI VIET
create table ThongTinTrangThaiBaiViet(
	idTrangThaiBaiViet bigint not null,
    idBaiViet bigint not null,
	thoiGian timestamp not null,
    FOREIGN KEY (idTrangThaiBaiViet) REFERENCES TrangThaiBaiViet(id),
	FOREIGN KEY (idBaiViet) REFERENCES BaiViet(id)
);
-- insert
insert into ThongTinTrangThaiBaiViet(idTrangThaiBaiViet, idBaiViet, thoiGian) values(1,1, "2021-03-02 13:00:01");
insert into ThongTinTrangThaiBaiViet(idTrangThaiBaiViet, idBaiViet, thoiGian) values(1,2, "2021-03-02 13:50:01");
-- BANG THONG TIN TRANG THAI BAI VIET

-- BANG BINH LUAN
create table BinhLuan(
	id bigint primary key auto_increment,
    idBaiViet bigint not null,
    idNguoiDUng bigint not null,
    idTraLoi bigint,
    noiDung text not null,
    hinhAnh text,
    FOREIGN KEY (idNguoiDung) REFERENCES NguoiDung(id),
    FOREIGN KEY (idBaiViet) REFERENCES BaiViet(id)
);
-- BANG BINH LUAN

-- BANG TRANG THAI BINH LUAN
create table TrangThaiBinhLuan(
	id bigint primary key auto_increment,
    maTrangThaiBinhLuan varchar(150) not null unique,
    tenTrangThaiBinhLuan varchar(150) not null unique
);

-- BANG THONG TIN TRANG THAI BINH LUAN
create table ThongTinTrangThaiBinhLuan(
	idTrangThaiBinhLuan bigint not null,
    idBinhLuan bigint not null,
	thoiGian timestamp not null,
    FOREIGN KEY (idTrangThaiBinhLuan) REFERENCES TrangThaiBinhLuan(id),
	FOREIGN KEY ( idBinhLuan) REFERENCES  BinhLuan(id)
);